import{_ as i,c as a,o as n,ag as h}from"./chunks/framework.DPDPlp3K.js";const g=JSON.parse('{"title":"Clean Code 작성하기!","description":"","frontmatter":{},"headers":[],"relativePath":"clean-code.md","filePath":"clean-code.md"}'),l={name:"clean-code.md"};function t(p,s,e,k,d,r){return n(),a("div",null,s[0]||(s[0]=[h(`<h1 id="clean-code-작성하기" tabindex="-1">Clean Code 작성하기! <a class="header-anchor" href="#clean-code-작성하기" aria-label="Permalink to &quot;Clean Code 작성하기!&quot;">​</a></h1><p>클린 코드는 유지보수하기 쉽고, 가독성이 뛰어나며, 확장 가능한 코드를 의미해요. 단순히 동작하는 코드가 아니라, 협업과 장기적인 유지보수를 고려한 코드 스타일을 뜻해요.</p><h2 id="방법" tabindex="-1">방법 <a class="header-anchor" href="#방법" aria-label="Permalink to &quot;방법&quot;">​</a></h2><h3 id="_1-의미-있는-변수와-함수명을-사용해요" tabindex="-1">1. 의미 있는 변수와 함수명을 사용해요 <a class="header-anchor" href="#_1-의미-있는-변수와-함수명을-사용해요" aria-label="Permalink to &quot;1. 의미 있는 변수와 함수명을 사용해요&quot;">​</a></h3><p>변수와 함수의 이름은 코드의 가독성을 결정하는 중요한 요소예요. 의미 없는 약어를 피하고, 변수명과 함수명이 역할을 명확히 드러내도록 작성해야 해요. 또한, 발음하기 쉬운 변수명을 사용하면 더욱 직관적인 코드를 작성할 수 있어요. 네이밍에서 가장 중요한 것은 쉽게 이해할 수 있는 것이며, 임의의 단어나 축약어보다는 직관적인 이름을 선택하는 것이 좋아요.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 나쁜 예</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> s </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line highlighted"><wbr></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 좋은 예</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> userAge </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> greetingMessage </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Hello&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><h3 id="_2-하나의-함수는-하나의-역할만-수행해야-해요" tabindex="-1">2. 하나의 함수는 하나의 역할만 수행해야 해요 <a class="header-anchor" href="#_2-하나의-함수는-하나의-역할만-수행해야-해요" aria-label="Permalink to &quot;2. 하나의 함수는 하나의 역할만 수행해야 해요&quot;">​</a></h3><p>함수는 하나의 명확한 역할만 수행하도록 작성하는 것이 중요해요. 여러 개의 기능을 한 함수에서 처리하면 유지보수가 어려워지고, 코드의 가독성이 떨어지게 돼요.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 나쁜 예</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> processUserData</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    validateUser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line highlighted"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    saveUserToDatabase</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    sendEmailNotification</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 좋은 예</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> validateUser</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> saveUserToDatabase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> sendEmailNotification</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> }</span></span></code></pre></div><h3 id="_3-주석을-최소화하고-코드-자체로-설명되도록-해요" tabindex="-1">3. 주석을 최소화하고, 코드 자체로 설명되도록 해요 <a class="header-anchor" href="#_3-주석을-최소화하고-코드-자체로-설명되도록-해요" aria-label="Permalink to &quot;3. 주석을 최소화하고, 코드 자체로 설명되도록 해요&quot;">​</a></h3><p>좋은 코드는 주석 없이도 이해할 수 있어야 해요. 주석은 코드의 내용을 보충하는 역할을 하지만, 코드 자체가 명확하다면 불필요한 주석을 줄일 수 있어요.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 나쁜 예</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 사용자의 나이를 설정함</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">user.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setAge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line highlighted"><wbr></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 좋은 예</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">user.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">updateAge</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">25</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="_4-들여쓰기와-코드-스타일을-일관되게-유지해요" tabindex="-1">4. 들여쓰기와 코드 스타일을 일관되게 유지해요 <a class="header-anchor" href="#_4-들여쓰기와-코드-스타일을-일관되게-유지해요" aria-label="Permalink to &quot;4. 들여쓰기와 코드 스타일을 일관되게 유지해요&quot;">​</a></h3><p>일관된 코드 스타일은 협업 시 가독성을 높이고, 코드 리뷰를 용이하게 해줘요. 들여쓰기와 공백을 일관되게 유지하면 코드의 가독성이 향상돼요.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 나쁜 예</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(isActive){(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;isActive Test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, isActive);}</span></span>
<span class="line"></span>
<span class="line highlighted"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 좋은 예</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (isActive) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;isActive Test&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, isActive);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_5-매직-넘버와-하드코딩을-피해야-해요" tabindex="-1">5. 매직 넘버와 하드코딩을 피해야 해요 <a class="header-anchor" href="#_5-매직-넘버와-하드코딩을-피해야-해요" aria-label="Permalink to &quot;5. 매직 넘버와 하드코딩을 피해야 해요&quot;">​</a></h3><p>코드에서 의미 없는 숫자(매직 넘버)를 사용하는 것은 유지보수를 어렵게 만들어요. 대신 상수를 사용하여 의미를 부여하는 것이 좋아요.</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 나쁜 예</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ...</span></span>
<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 좋은 예</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> PRODUCT_CODE</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (status </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">===</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> STATUS_ACTIVE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">   ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="_6-중복을-최소화해요" tabindex="-1">6. 중복을 최소화해요 <a class="header-anchor" href="#_6-중복을-최소화해요" aria-label="Permalink to &quot;6. 중복을 최소화해요&quot;">​</a></h3><p>중복된 코드는 유지보수를 어렵게 만들고, 코드의 일관성을 해칠 수 있어요. 공통된 로직을 함수화하고, 재사용 가능한 코드를 작성하는 것이 중요해요. 자주 사용되는 코드는 hook으로 만들어 관리할 수 있어요.</p><h2 id="결론" tabindex="-1">결론 <a class="header-anchor" href="#결론" aria-label="Permalink to &quot;결론&quot;">​</a></h2><p>클린 코드는 단순한 규칙이 아니라, 처음 보는 사람도 쉽게 파악할 수 있도록 협업과 유지보수를 고려한 코드 작성 방식이에요. 의미 있는 변수명, 단일 책임 원칙, 일관된 코드 스타일, 그리고 중복을 최소화하는 것이 중요해요. 이러한 원칙을 적용하면 가독성과 유지보수성이 뛰어난 프로젝트를 만들 수 있어요.</p>`,22)]))}const c=i(l,[["render",t]]);export{g as __pageData,c as default};
